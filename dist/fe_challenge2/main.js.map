{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/datepicker-range-input/datepicker-range-input.component.ts","./src/app/components/datepicker-range-input/datepicker-range-input.component.html","./src/app/components/output-datepicker-range/output-datepicker-range.component.ts","./src/app/components/output-datepicker-range/output-datepicker-range.component.html","./src/app/pipes/full-length-date-format.pipe.ts","./src/app/services/custom-date-format.service.ts","./src/app/services/output-datepicker-range.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Input } from '@angular/core';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { KeyValue } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  arrayDateRanges: Array<NgbDateStruct[]> = [];\n  title = 'fe_challenge2';\n\n\n\n  addFirstDateRange(dates: any): void {\n    const tempArray = new Array(dates.fromDate, dates.toDate);\n    this.arrayDateRanges[0] = tempArray;\n  }\n\n\n  addSecondDateRange(dates: any): void {\n    const tempArray = new Array(dates.fromDate, dates.toDate);\n    this.arrayDateRanges[1] = tempArray;\n  }\n}\n","<div class=\"sidebar\">\n  <p>Sidebar</p>\n  <div class=\"main-wrapper\">\n    <div class=\"datepickers-wrapper\">\n      <h4 class=\"time-range-title\">TIME RANGE</h4>\n      <app-datepicker-input (newItemEvent) = \"addFirstDateRange($event)\"></app-datepicker-input>\n      <app-datepicker-input (newItemEvent) = \"addSecondDateRange($event)\"></app-datepicker-input>\n    </div>\n  </div>\n</div>\n<app-output-datepicker-range [arrayDatesRanges] = \"arrayDateRanges\" ></app-output-datepicker-range>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, ViewChild, ElementRef, Renderer2, OnInit, Output, EventEmitter } from '@angular/core';\nimport {\n  NgbInputDatepicker,\n  NgbDateStruct,\n  NgbDateParserFormatter,\n  NgbDate,\n  NgbCalendar,\n} from '@ng-bootstrap/ng-bootstrap';\n\n// constants\nconst now = new Date();\n\nconst equals = (one: NgbDateStruct, two: NgbDateStruct) =>\n  one && two && two.year === one.year && two.month === one.month && two.day === one.day;\n\nconst before = (one: NgbDateStruct, two: NgbDateStruct) =>\n  !one || !two ? false : one.year === two.year ? one.month === two.month ? one.day === two.day\n    ? false : one.day < two.day : one.month < two.month : one.year < two.year;\n\nconst after = (one: NgbDateStruct, two: NgbDateStruct) =>\n  !one || !two ? false : one.year === two.year ? one.month === two.month ? one.day === two.day\n    ? false : one.day > two.day : one.month > two.month : one.year > two.year;\n\n\n@Component({\n  selector: 'app-datepicker-input',\n  templateUrl: './datepicker-range-input.component.html',\n  styleUrls: ['./datepicker-range-input.component.scss']\n})\nexport class DatepickerRangeInputComponent implements OnInit {\n\n  startDate: NgbDate;\n  maxDate: NgbDateStruct;\n  minDate: NgbDateStruct;\n  hoveredDate: NgbDateStruct;\n  fromDate: NgbDateStruct;\n  toDate: NgbDateStruct;\n  fromAndToDateArray: any[] = [];\n\n  @ViewChild('datepicker') input: NgbInputDatepicker;\n  @ViewChild('myRangeInput') myRangeInput: ElementRef;\n\n  @Output() newItemEvent = new EventEmitter<any>();\n\n\n\n  constructor(\n    private renderer: Renderer2,\n    private parserFormatter: NgbDateParserFormatter) {\n  }\n\n  isHovered = date =>\n    this.fromDate && !this.toDate && this.hoveredDate && after(date, this.fromDate) && before(date, this.hoveredDate)\n  isInside = date => after(date, this.fromDate) && before(date, this.toDate);\n  isFrom = date => equals(date, this.fromDate);\n  isTo = date => equals(date, this.toDate);\n\n  ngOnInit(): void {\n    // set maximum and minimum (years, month and dates) of calendar.\n    this.maxDate = { year: now.getFullYear() + 10, month: now.getMonth() + 1, day: now.getDate() };\n    this.minDate = { year: now.getFullYear() - 10, month: now.getMonth() + 1, day: now.getDate() };\n  }\n\n  //  set choosed date from user within input fields\n  // and emit those values to parent component\n  onDateSelection(date: NgbDateStruct): void {\n    let parsed = '';\n    if (!this.fromDate && !this.toDate) {\n      this.fromDate = date;\n    } else if (this.fromDate && !this.toDate && after(date, this.fromDate)) {\n      this.toDate = date;\n      this.input.close();\n    } else {\n      this.toDate = null;\n      this.fromDate = date;\n    }\n\n    parsed += !this.toDate ? this.parserFormatter.format(this.fromDate) :\n    `${this.parserFormatter.format(this.fromDate)} - ${this.parserFormatter.format(this.toDate)}`;\n    this.renderer.setProperty(this.myRangeInput.nativeElement, 'value', parsed);\n    this.newItemEvent.emit({ fromDate: this.fromDate, toDate: this.toDate });\n  }\n}\n","<form class=\"form-inline\">\n  <div class=\"form-group\">\n    <div class=\"input-group\">\n      <input name=\"datepicker\" \n         class=\"form-control\" \n         #myRangeInput\n         ngbDatepicker \n         #datepicker=\"ngbDatepicker\"\n         [autoClose]=\"true\"\n         [displayMonths]=\"2\"\n         [dayTemplate]=\"t\"\n         [outsideDays]=\"'hidden'\"\n         [startDate] = \"fromDate!\"\n         [maxDate]=\"maxDate\"\n         [minDate]=\"minDate\"\n         placeholder=\"dd. mmm yyyy - dd. mmm yyyy\"\n         autocomplete=\"off\">\n\n        <ng-template #t let-date=\"date\" let-focused=\"focused\">\n            <span class=\"custom-day\"\n                [class.range]=\"isFrom(date) || isTo(date) || isInside(date) || isHovered(date)\"\n                [class.faded]=\"isHovered(date) || isInside(date)\"\n                (click)=\"onDateSelection(date, $event.target)\"\n                (mouseenter)=\"hoveredDate = date\"\n                (mouseleave)=\"hoveredDate = null\">\n            {{ date.day }}\n            </span>\n        </ng-template>\n      <div class=\"input-group-append\">\n        <button class=\"btn btn-outline-secondary calendar\" (click)=\"datepicker.toggle()\" type=\"button\">\n        </button>\n      </div>\n    </div>\n  </div>\n</form>\n\n","import { Component, OnInit, OnDestroy, Input, OnChanges, SimpleChange, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-output-datepicker-range',\n  templateUrl: './output-datepicker-range.component.html',\n  styleUrls: ['./output-datepicker-range.component.scss']\n})\nexport class OutputDatepickerRangeComponent {\n\n  @Input() arrayDatesRanges: any;\n\n  constructor() { }\n}\n","<div *ngIf=\"arrayDatesRanges.length > 0\" class=\"date-ranges-wrapper\">\n  <div class=\"card\">\n    <div class=\"card-header text-center\">\n      <h4 class=\"header-title\">Selected Dates</h4>\n    </div>\n    <ul class=\"list-group list-group-item-dark\">\n      <li *ngFor=\"let value of arrayDatesRanges\" class=\"list-group-item text-center alert-secondary\">\n        {{value[0] | fullLengthDateFormat}} -\n        {{value[1] | fullLengthDateFormat}}\n      </li>\n    </ul>\n  </div>\n</div>","import { Pipe, PipeTransform } from '@angular/core';\nimport { NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { DatePipe } from '@angular/common';\n\n@Pipe({\n  name: 'fullLengthDateFormat'\n})\nexport class FullLengthDateFormatPipe extends DatePipe implements PipeTransform {\n  transform(value: NgbDateStruct, args?: any): any {\n    if (value) {\n      const date = new Date(value.year, value.month - 1, value.day);\n      return super.transform(date, 'dd. MMMM yyyy');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgbDateParserFormatter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\nconst fullMonths = ['January', 'February', 'Mars', 'April',\n'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n@Injectable()\nexport class CustomDateParserFormatterService extends NgbDateParserFormatter {\n    parse(value: string): NgbDateStruct {\n        if (value) {\n            const dateParts = value.trim().split('/');\n            if (dateParts.length === 1 && dateParts[0]) {\n                return {year: +dateParts[0], month: null, day: null};\n            } else if (dateParts.length === 2 && dateParts[0] && dateParts[1]) {\n                return {year: +dateParts[1], month: +dateParts[0], day: null};\n            } else if (dateParts.length === 3 && dateParts[0] && dateParts[1] && dateParts[2]) {\n                return {year: +dateParts[2], month: +dateParts[1], day: +dateParts[0]};\n            }\n        }\n    }\n\n    format(date: NgbDateStruct): string {\n        let stringDate = '';\n        if (date) {\n            stringDate += date.day ? date.day + '. ' : '';\n            stringDate += date.month ? fullMonths[date.month - 1].substring(0, 3) + ' ' : '';\n            stringDate += date.year;\n        }\n        return stringDate;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { CustomFormatDateModel } from '../models/custom-format-date.model';\n\n\n@Injectable()\nexport class OutputDatepickerRangeService {\n\n  constructor() { }\n\n  observer = new Subject();\n  subcriber$ = this.observer.asObservable();\n\n  emitSelectedDate(date: any) {\n    this.observer.next(date);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatepickerRangeInputComponent } from '../components/datepicker-range-input/datepicker-range-input.component';\nimport { OutputDatepickerRangeComponent } from '../components/output-datepicker-range/output-datepicker-range.component';\nimport { NgbModule, NgbDateParserFormatter } from '@ng-bootstrap/ng-bootstrap';\nimport { CustomDateParserFormatterService } from '../services/custom-date-format.service';\nimport { OutputDatepickerRangeService } from '../services/output-datepicker-range.service';\nimport { FullLengthDateFormatPipe } from '../pipes/full-length-date-format.pipe';\n\n@NgModule({\n  declarations: [\n    DatepickerRangeInputComponent,\n    OutputDatepickerRangeComponent,\n    FullLengthDateFormatPipe,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgbModule,\n\n  ],\n  exports: [\n    FormsModule,\n    DatepickerRangeInputComponent,\n    OutputDatepickerRangeComponent,\n  ],\n  providers: [\n    {provide: NgbDateParserFormatter, useClass: CustomDateParserFormatterService,\n    },\n    OutputDatepickerRangeService\n  ],\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}